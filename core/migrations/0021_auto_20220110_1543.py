# Generated by Django 4.0 on 2022-01-10 14:43

from django.db import migrations

def tags_from_type(apps, schema_editor):
    Lamning = apps.get_model('core', 'Lamning')
    Tag = apps.get_model('taggit', 'Tag')
    TaggedItem = apps.get_model('taggit', 'TaggedItem')
    try:
        ContentType = apps.get_model('contenttypes', 'ContentType')
        ct = ContentType.objects.get(app_label='core', model='lamning')
    except ContentType.DoesNotExist:
        print('Skipping migration of lamningtypes to tags, assuming empty/new db.')
        return
    for lamning in Lamning.objects.all():
        tag_string = lamning.lamning_type.name.lower()

        tag, created = Tag.objects.get_or_create(name=tag_string, slug=tag_string)

        TaggedItem.objects.get_or_create(
            content_type_id=ct.id,
            object_id=lamning.id,
            tag=tag,
        )

class Migration(migrations.Migration):

    dependencies = [
        ('core', '0020_lamning_tags'),
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.RunPython(tags_from_type),
    ]
